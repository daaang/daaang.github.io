---
layout: post
title:  "Li'l Config"
date:   2017-03-06 10:04:42 -0500
---
Finally working on my own `configure` script generator. I've long had
issues with autotools, but I'm only now actually starting to do anything
about it.

As a result, I've finally read the complete documentation for GNU Make.
One of my complaints about autotools is that it pretty consistently
generates a makefile that is completely unreadable. In my opinion, a
makefile should be human-readable.

In particular, I think that it can be hard not to over-rely on variables
and other advanced features in the name of DRY. But, if your makefile is
auto-generated by a configure script, then who cares if it repeats
itself? As long as the source file (the one a human actually edits)
doesn't repeat itself, who cares if the makefile sacrifices the DRY
principle in the name of readability?

Anyway, this is certainly an interesting problem. I'm calling my program
`lilconf`. It doesn't matter what language it's written in, but it
should read a yaml file and produce a configure script.

That configure script can mostly be static, honestly. Most of what it
needs to do is take in a lot of arguments, separate them by purpose, and
parse them properly. The dynamic part of the script is in deciding what
to do with what it finds.

The `config.status` script generated by `configure` can in turn be
mostly static. It'll need the same sorts of argument parsing, but it
won't need nearly as much dynamic ability, since the configuration will
have already happened. For the most part, it should be a collection of
heredocs ready to be piped into their appropriate files.

I'm rambling. I'm mostly just excited about the whole thing.

Probably important to mention that I'm not trying to replace autotools
in all its glory---quite the opposite! I'm trying to make something
simple. I don't think li'l conf will ever be as powerful as autotools.
But most of the time, I don't need that kind of power anyway.
